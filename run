#!/usr/bin/env scala
// ------------------------------------------
// run - a simple scala driver for the Scalding workshop.
// usage (*nix): run scaldingscript.scala [options]
// usage (Windows): scala run scaldingscript.scala [options]
//
// Run verifies that you passed the name of a Scalding script (a Scala source file)
// as an argument, compiles it, and invokes Scalding in "local" mode.
// Scalding comes with a more sophisticated driver script called "scald.rb".
// For example, scald.rb handles invoking Scalding scripts as Hadoop jobs.
// This script is simpler and avoids some issues using "scald.rb".
//
// NOTE: This script requires Scala 2.10 or newer.
// TODO:
// 1. Does not handle invocation from another directory.
// 2. Test that our file separator logic works correctly on Windows!
val separator = java.io.File.separator match {
case "\\" => "\\\\"
case sep => sep
}
val pathSeparator = System.getProperty("path.separator") match {
case null => println("""WARNING: System.getProperty("path.separator") returned null. Using :""")
case sep => sep
}
val help = """
|run - a simple scala driver for the Scalding workshop.
|usage:
| (*nix): run [scalding_options] script.scala [script_options]
| (Windows): scala run [scalding_options] script.scala [script_options]
|where the "scalding_options" are any options supported by scalding itself
|and the "script_options" will be discussed for each exercise.
|""".stripMargin
// Increase (or decrease) this heap size size value if necessary.
val heapSize = "-Xmx1g"

val assembly = s"target${separator}scala-2.10${separator}activatorscalding-assembly-0.9.1-deps.jar"

val libs = s"target${separator}scala-2.10${separator}classes"


val repl = s"scala -deprecation -cp $assembly"

